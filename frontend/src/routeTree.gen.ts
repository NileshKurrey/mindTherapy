/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SignUpIndexRouteImport } from './routes/sign-up/index'
import { Route as SignInIndexRouteImport } from './routes/sign-in/index'
import { Route as EntryServerRouteImport } from './routes/entry.server'
import { Route as AuthenticatedHomeRouteRouteImport } from './routes/_authenticated/home/route'
import { Route as AuthenticatedHomeIndexRouteImport } from './routes/_authenticated/home/index'
import { Route as AuthenticatedSessionSessionIdRouteImport } from './routes/_authenticated/session/$sessionId'
import { Route as AuthenticatedHomeSessionsRouteImport } from './routes/_authenticated/home/sessions'
import { Route as AuthenticatedHomeProfileRouteImport } from './routes/_authenticated/home/profile'

const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const SignUpIndexRoute = SignUpIndexRouteImport.update({
  id: '/sign-up/',
  path: '/sign-up/',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInIndexRoute = SignInIndexRouteImport.update({
  id: '/sign-in/',
  path: '/sign-in/',
  getParentRoute: () => rootRouteImport,
} as any)
const EntryServerRoute = EntryServerRouteImport.update({
  id: '/entry/server',
  path: '/entry/server',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedHomeRouteRoute = AuthenticatedHomeRouteRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedHomeIndexRoute = AuthenticatedHomeIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedHomeRouteRoute,
} as any)
const AuthenticatedSessionSessionIdRoute =
  AuthenticatedSessionSessionIdRouteImport.update({
    id: '/session/$sessionId',
    path: '/session/$sessionId',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedHomeSessionsRoute =
  AuthenticatedHomeSessionsRouteImport.update({
    id: '/sessions',
    path: '/sessions',
    getParentRoute: () => AuthenticatedHomeRouteRoute,
  } as any)
const AuthenticatedHomeProfileRoute =
  AuthenticatedHomeProfileRouteImport.update({
    id: '/profile',
    path: '/profile',
    getParentRoute: () => AuthenticatedHomeRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/home': typeof AuthenticatedHomeRouteRouteWithChildren
  '/entry/server': typeof EntryServerRoute
  '/sign-in': typeof SignInIndexRoute
  '/sign-up': typeof SignUpIndexRoute
  '/home/profile': typeof AuthenticatedHomeProfileRoute
  '/home/sessions': typeof AuthenticatedHomeSessionsRoute
  '/session/$sessionId': typeof AuthenticatedSessionSessionIdRoute
  '/home/': typeof AuthenticatedHomeIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/entry/server': typeof EntryServerRoute
  '/sign-in': typeof SignInIndexRoute
  '/sign-up': typeof SignUpIndexRoute
  '/home/profile': typeof AuthenticatedHomeProfileRoute
  '/home/sessions': typeof AuthenticatedHomeSessionsRoute
  '/session/$sessionId': typeof AuthenticatedSessionSessionIdRoute
  '/home': typeof AuthenticatedHomeIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/_authenticated/home': typeof AuthenticatedHomeRouteRouteWithChildren
  '/entry/server': typeof EntryServerRoute
  '/sign-in/': typeof SignInIndexRoute
  '/sign-up/': typeof SignUpIndexRoute
  '/_authenticated/home/profile': typeof AuthenticatedHomeProfileRoute
  '/_authenticated/home/sessions': typeof AuthenticatedHomeSessionsRoute
  '/_authenticated/session/$sessionId': typeof AuthenticatedSessionSessionIdRoute
  '/_authenticated/home/': typeof AuthenticatedHomeIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/home'
    | '/entry/server'
    | '/sign-in'
    | '/sign-up'
    | '/home/profile'
    | '/home/sessions'
    | '/session/$sessionId'
    | '/home/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/entry/server'
    | '/sign-in'
    | '/sign-up'
    | '/home/profile'
    | '/home/sessions'
    | '/session/$sessionId'
    | '/home'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/_authenticated/home'
    | '/entry/server'
    | '/sign-in/'
    | '/sign-up/'
    | '/_authenticated/home/profile'
    | '/_authenticated/home/sessions'
    | '/_authenticated/session/$sessionId'
    | '/_authenticated/home/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  EntryServerRoute: typeof EntryServerRoute
  SignInIndexRoute: typeof SignInIndexRoute
  SignUpIndexRoute: typeof SignUpIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-up/': {
      id: '/sign-up/'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in/': {
      id: '/sign-in/'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/entry/server': {
      id: '/entry/server'
      path: '/entry/server'
      fullPath: '/entry/server'
      preLoaderRoute: typeof EntryServerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/home': {
      id: '/_authenticated/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AuthenticatedHomeRouteRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/home/': {
      id: '/_authenticated/home/'
      path: '/'
      fullPath: '/home/'
      preLoaderRoute: typeof AuthenticatedHomeIndexRouteImport
      parentRoute: typeof AuthenticatedHomeRouteRoute
    }
    '/_authenticated/session/$sessionId': {
      id: '/_authenticated/session/$sessionId'
      path: '/session/$sessionId'
      fullPath: '/session/$sessionId'
      preLoaderRoute: typeof AuthenticatedSessionSessionIdRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/home/sessions': {
      id: '/_authenticated/home/sessions'
      path: '/sessions'
      fullPath: '/home/sessions'
      preLoaderRoute: typeof AuthenticatedHomeSessionsRouteImport
      parentRoute: typeof AuthenticatedHomeRouteRoute
    }
    '/_authenticated/home/profile': {
      id: '/_authenticated/home/profile'
      path: '/profile'
      fullPath: '/home/profile'
      preLoaderRoute: typeof AuthenticatedHomeProfileRouteImport
      parentRoute: typeof AuthenticatedHomeRouteRoute
    }
  }
}

interface AuthenticatedHomeRouteRouteChildren {
  AuthenticatedHomeProfileRoute: typeof AuthenticatedHomeProfileRoute
  AuthenticatedHomeSessionsRoute: typeof AuthenticatedHomeSessionsRoute
  AuthenticatedHomeIndexRoute: typeof AuthenticatedHomeIndexRoute
}

const AuthenticatedHomeRouteRouteChildren: AuthenticatedHomeRouteRouteChildren =
  {
    AuthenticatedHomeProfileRoute: AuthenticatedHomeProfileRoute,
    AuthenticatedHomeSessionsRoute: AuthenticatedHomeSessionsRoute,
    AuthenticatedHomeIndexRoute: AuthenticatedHomeIndexRoute,
  }

const AuthenticatedHomeRouteRouteWithChildren =
  AuthenticatedHomeRouteRoute._addFileChildren(
    AuthenticatedHomeRouteRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedHomeRouteRoute: typeof AuthenticatedHomeRouteRouteWithChildren
  AuthenticatedSessionSessionIdRoute: typeof AuthenticatedSessionSessionIdRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedHomeRouteRoute: AuthenticatedHomeRouteRouteWithChildren,
  AuthenticatedSessionSessionIdRoute: AuthenticatedSessionSessionIdRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  EntryServerRoute: EntryServerRoute,
  SignInIndexRoute: SignInIndexRoute,
  SignUpIndexRoute: SignUpIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
