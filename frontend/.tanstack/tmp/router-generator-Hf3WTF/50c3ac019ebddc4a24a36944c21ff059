/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as SignUpIndexRouteImport } from './routes/sign-up/index'
import { Route as SignInIndexRouteImport } from './routes/sign-in/index'
import { Route as AuthenticatedHomeIndexRouteImport } from './routes/_authenticated/home/index'
import { Route as AuthenticatedHomeUsersRouteImport } from './routes/_authenticated/home/users'
import { Route as AuthenticatedHomeSessionsRouteImport } from './routes/_authenticated/home/sessions'
import { Route as AuthenticatedHomeHomeLayoutRouteImport } from './routes/_authenticated/home/_homeLayout'

const AuthenticatedHomeRouteImport = createFileRoute('/_authenticated/home')()

const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedHomeRoute = AuthenticatedHomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const SignUpIndexRoute = SignUpIndexRouteImport.update({
  id: '/sign-up/',
  path: '/sign-up/',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInIndexRoute = SignInIndexRouteImport.update({
  id: '/sign-in/',
  path: '/sign-in/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedHomeIndexRoute = AuthenticatedHomeIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedHomeRoute,
} as any)
const AuthenticatedHomeUsersRoute = AuthenticatedHomeUsersRouteImport.update({
  id: '/users',
  path: '/users',
  getParentRoute: () => AuthenticatedHomeRoute,
} as any)
const AuthenticatedHomeSessionsRoute =
  AuthenticatedHomeSessionsRouteImport.update({
    id: '/sessions',
    path: '/sessions',
    getParentRoute: () => AuthenticatedHomeRoute,
  } as any)
const AuthenticatedHomeHomeLayoutRoute =
  AuthenticatedHomeHomeLayoutRouteImport.update({
    id: '/_homeLayout',
    getParentRoute: () => AuthenticatedHomeRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/sign-in': typeof SignInIndexRoute
  '/sign-up': typeof SignUpIndexRoute
  '/home': typeof AuthenticatedHomeHomeLayoutRoute
  '/home/sessions': typeof AuthenticatedHomeSessionsRoute
  '/home/users': typeof AuthenticatedHomeUsersRoute
  '/home/': typeof AuthenticatedHomeIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/sign-in': typeof SignInIndexRoute
  '/sign-up': typeof SignUpIndexRoute
  '/home': typeof AuthenticatedHomeIndexRoute
  '/home/sessions': typeof AuthenticatedHomeSessionsRoute
  '/home/users': typeof AuthenticatedHomeUsersRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/sign-in/': typeof SignInIndexRoute
  '/sign-up/': typeof SignUpIndexRoute
  '/_authenticated/home': typeof AuthenticatedHomeRouteWithChildren
  '/_authenticated/home/_homeLayout': typeof AuthenticatedHomeHomeLayoutRoute
  '/_authenticated/home/sessions': typeof AuthenticatedHomeSessionsRoute
  '/_authenticated/home/users': typeof AuthenticatedHomeUsersRoute
  '/_authenticated/home/': typeof AuthenticatedHomeIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/sign-in'
    | '/sign-up'
    | '/home'
    | '/home/sessions'
    | '/home/users'
    | '/home/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/sign-in' | '/sign-up' | '/home' | '/home/sessions' | '/home/users'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/sign-in/'
    | '/sign-up/'
    | '/_authenticated/home'
    | '/_authenticated/home/_homeLayout'
    | '/_authenticated/home/sessions'
    | '/_authenticated/home/users'
    | '/_authenticated/home/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  SignInIndexRoute: typeof SignInIndexRoute
  SignUpIndexRoute: typeof SignUpIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/home': {
      id: '/_authenticated/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AuthenticatedHomeRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/sign-up/': {
      id: '/sign-up/'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in/': {
      id: '/sign-in/'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/home/': {
      id: '/_authenticated/home/'
      path: '/'
      fullPath: '/home/'
      preLoaderRoute: typeof AuthenticatedHomeIndexRouteImport
      parentRoute: typeof AuthenticatedHomeRoute
    }
    '/_authenticated/home/users': {
      id: '/_authenticated/home/users'
      path: '/users'
      fullPath: '/home/users'
      preLoaderRoute: typeof AuthenticatedHomeUsersRouteImport
      parentRoute: typeof AuthenticatedHomeRoute
    }
    '/_authenticated/home/sessions': {
      id: '/_authenticated/home/sessions'
      path: '/sessions'
      fullPath: '/home/sessions'
      preLoaderRoute: typeof AuthenticatedHomeSessionsRouteImport
      parentRoute: typeof AuthenticatedHomeRoute
    }
    '/_authenticated/home/_homeLayout': {
      id: '/_authenticated/home/_homeLayout'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof AuthenticatedHomeHomeLayoutRouteImport
      parentRoute: typeof AuthenticatedHomeRoute
    }
  }
}

interface AuthenticatedHomeRouteChildren {
  AuthenticatedHomeHomeLayoutRoute: typeof AuthenticatedHomeHomeLayoutRoute
  AuthenticatedHomeSessionsRoute: typeof AuthenticatedHomeSessionsRoute
  AuthenticatedHomeUsersRoute: typeof AuthenticatedHomeUsersRoute
  AuthenticatedHomeIndexRoute: typeof AuthenticatedHomeIndexRoute
}

const AuthenticatedHomeRouteChildren: AuthenticatedHomeRouteChildren = {
  AuthenticatedHomeHomeLayoutRoute: AuthenticatedHomeHomeLayoutRoute,
  AuthenticatedHomeSessionsRoute: AuthenticatedHomeSessionsRoute,
  AuthenticatedHomeUsersRoute: AuthenticatedHomeUsersRoute,
  AuthenticatedHomeIndexRoute: AuthenticatedHomeIndexRoute,
}

const AuthenticatedHomeRouteWithChildren =
  AuthenticatedHomeRoute._addFileChildren(AuthenticatedHomeRouteChildren)

interface AuthenticatedRouteChildren {
  AuthenticatedHomeRoute: typeof AuthenticatedHomeRouteWithChildren
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedHomeRoute: AuthenticatedHomeRouteWithChildren,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  SignInIndexRoute: SignInIndexRoute,
  SignUpIndexRoute: SignUpIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
